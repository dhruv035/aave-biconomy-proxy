/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AProxy, AProxyInterface } from "../AProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "depositToAave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lPAddress",
        type: "address",
      },
    ],
    name: "setLendingPoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFromAave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052736c9fb0d5bd9429eb9cd96b85b81d872281771e6b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b506040516200166b3803806200166b83398181016040528101906200008c9190620002ec565b80620000ad620000a1620000f660201b60201c565b6200011260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200031e565b60006200010d620001d660201b62000ad31760201c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000620001e9336200022060201b60201c565b15620001ff57601436033560601c90506200021c565b620002146200027a60201b62000b051760201c565b90506200021d565b5b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002b48262000287565b9050919050565b620002c681620002a7565b8114620002d257600080fd5b50565b600081519050620002e681620002bb565b92915050565b60006020828403121562000305576200030462000282565b5b60006200031584828501620002d5565b91505092915050565b61133d806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ff578063da7422281461011d578063ed3f827a14610139578063f2fde38b1461015557610088565b80630b2ba8d51461008d578063487ede04146100a9578063572b6c05146100c5578063715018a6146100f5575b600080fd5b6100a760048036038101906100a29190610cc2565b610171565b005b6100c360048036038101906100be9190610d15565b610459565b005b6100df60048036038101906100da9190610d55565b610750565b6040516100ec9190610d9d565b60405180910390f35b6100fd6107aa565b005b610107610832565b6040516101149190610dc7565b60405180910390f35b61013760048036038101906101329190610d55565b61085b565b005b610153600480360381019061014e9190610d55565b61091b565b005b61016f600480360381019061016a9190610d55565b6109db565b005b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663d1946dbc6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101e5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061020e9190610f50565b90506000805b600183516102229190610fc8565b8161ffff161015610298578673ffffffffffffffffffffffffffffffffffffffff16838261ffff168151811061025b5761025a610ffc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561028457600191505b600181610291919061102b565b9050610214565b5060011515811515146102aa57600080fd5b60008690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd6102d3610b0d565b30896040518463ffffffff1660e01b81526004016102f393929190611072565b6020604051808303816000875af1158015610312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033691906110d5565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b8152600401610394929190611102565b6020604051808303816000875af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d791906110d5565b508373ffffffffffffffffffffffffffffffffffffffff1663617ba03788886103fe610b0d565b896040518563ffffffff1660e01b815260040161041e949392919061113a565b600060405180830381600087803b15801561043857600080fd5b505af115801561044c573d6000803e3d6000fd5b5050505050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663d1946dbc6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104f69190610f50565b90506000805b6001835161050a9190610fc8565b8161ffff161015610580578573ffffffffffffffffffffffffffffffffffffffff16838261ffff168151811061054357610542610ffc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561056c57600191505b600181610579919061102b565b90506104fc565b50600115158115151461059257600080fd5b60008590508073ffffffffffffffffffffffffffffffffffffffff166323b872dd6105bb610b0d565b30886040518463ffffffff1660e01b81526004016105db93929190611072565b6020604051808303816000875af11580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e91906110d5565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b815260040161067c929190611102565b6020604051808303816000875af115801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf91906110d5565b508373ffffffffffffffffffffffffffffffffffffffff166369328dec87876106e6610b0d565b6040518463ffffffff1660e01b81526004016107049392919061117f565b6020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074791906111cb565b50505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6107b2610b0d565b73ffffffffffffffffffffffffffffffffffffffff166107d0610832565b73ffffffffffffffffffffffffffffffffffffffff1614610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90611255565b60405180910390fd5b6108306000610b1c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610863610b0d565b73ffffffffffffffffffffffffffffffffffffffff16610881610832565b73ffffffffffffffffffffffffffffffffffffffff16146108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611255565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610923610b0d565b73ffffffffffffffffffffffffffffffffffffffff16610941610832565b73ffffffffffffffffffffffffffffffffffffffff1614610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90611255565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109e3610b0d565b73ffffffffffffffffffffffffffffffffffffffff16610a01610832565b73ffffffffffffffffffffffffffffffffffffffff1614610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e90611255565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe906112e7565b60405180910390fd5b610ad081610b1c565b50565b6000610ade33610750565b15610af257601436033560601c9050610b01565b610afa610b05565b9050610b02565b5b90565b600033905090565b6000610b17610ad3565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c1f82610bf4565b9050919050565b610c2f81610c14565b8114610c3a57600080fd5b50565b600081359050610c4c81610c26565b92915050565b6000819050919050565b610c6581610c52565b8114610c7057600080fd5b50565b600081359050610c8281610c5c565b92915050565b600061ffff82169050919050565b610c9f81610c88565b8114610caa57600080fd5b50565b600081359050610cbc81610c96565b92915050565b600080600060608486031215610cdb57610cda610bea565b5b6000610ce986828701610c3d565b9350506020610cfa86828701610c73565b9250506040610d0b86828701610cad565b9150509250925092565b60008060408385031215610d2c57610d2b610bea565b5b6000610d3a85828601610c3d565b9250506020610d4b85828601610c73565b9150509250929050565b600060208284031215610d6b57610d6a610bea565b5b6000610d7984828501610c3d565b91505092915050565b60008115159050919050565b610d9781610d82565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b610dc181610c14565b82525050565b6000602082019050610ddc6000830184610db8565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e3082610de7565b810181811067ffffffffffffffff82111715610e4f57610e4e610df8565b5b80604052505050565b6000610e62610be0565b9050610e6e8282610e27565b919050565b600067ffffffffffffffff821115610e8e57610e8d610df8565b5b602082029050602081019050919050565b600080fd5b600081519050610eb381610c26565b92915050565b6000610ecc610ec784610e73565b610e58565b90508083825260208201905060208402830185811115610eef57610eee610e9f565b5b835b81811015610f185780610f048882610ea4565b845260208401935050602081019050610ef1565b5050509392505050565b600082601f830112610f3757610f36610de2565b5b8151610f47848260208601610eb9565b91505092915050565b600060208284031215610f6657610f65610bea565b5b600082015167ffffffffffffffff811115610f8457610f83610bef565b5b610f9084828501610f22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd382610c52565b9150610fde83610c52565b925082821015610ff157610ff0610f99565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061103682610c88565b915061104183610c88565b92508261ffff0382111561105857611057610f99565b5b828201905092915050565b61106c81610c52565b82525050565b60006060820190506110876000830186610db8565b6110946020830185610db8565b6110a16040830184611063565b949350505050565b6110b281610d82565b81146110bd57600080fd5b50565b6000815190506110cf816110a9565b92915050565b6000602082840312156110eb576110ea610bea565b5b60006110f9848285016110c0565b91505092915050565b60006040820190506111176000830185610db8565b6111246020830184611063565b9392505050565b61113481610c88565b82525050565b600060808201905061114f6000830187610db8565b61115c6020830186611063565b6111696040830185610db8565b611176606083018461112b565b95945050505050565b60006060820190506111946000830186610db8565b6111a16020830185611063565b6111ae6040830184610db8565b949350505050565b6000815190506111c581610c5c565b92915050565b6000602082840312156111e1576111e0610bea565b5b60006111ef848285016111b6565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061123f6020836111f8565b915061124a82611209565b602082019050919050565b6000602082019050818103600083015261126e81611232565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112d16026836111f8565b91506112dc82611275565b604082019050919050565b60006020820190508181036000830152611300816112c4565b905091905056fea2646970667358221220111f5f167275900c8ca6bc9f96b06d5eb4ee08ad52a7134aaba67e200ac37b7d64736f6c634300080a0033";

type AProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AProxy__factory extends ContractFactory {
  constructor(...args: AProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AProxy> {
    return super.deploy(_trustedForwarder, overrides || {}) as Promise<AProxy>;
  }
  override getDeployTransaction(
    _trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_trustedForwarder, overrides || {});
  }
  override attach(address: string): AProxy {
    return super.attach(address) as AProxy;
  }
  override connect(signer: Signer): AProxy__factory {
    return super.connect(signer) as AProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AProxyInterface {
    return new utils.Interface(_abi) as AProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AProxy {
    return new Contract(address, _abi, signerOrProvider) as AProxy;
  }
}
